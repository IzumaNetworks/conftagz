name: Conftagz PR-checks
on: 
    # Allow triggering the workflow via the GitHub UI
    workflow_dispatch:

    # Don't run if only the .md -file is changed
    push:
        paths-ignore:
            - '**/*.md'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: conftagz-'${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  pr-checks:
    strategy:
      matrix:
        golang-ver: ["1.21", "1.22"]
    runs-on: ["self-hosted", "client"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up golang
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.golang-ver }}
      - run: go version
      - run: | 
          sudo apt-get update && \
          DEBIAN_FRONTEND="noninteractive" sudo apt-get install -y golint
      - name: go build
        run: go build ./...
      - name: go vet
        if: always()
        run: |
          echo echo "## go vet" >> $GITHUB_STEP_SUMMARY
          go vet -set_exit_status ./... |tee govet.log >> $GITHUB_STEP_SUMMARY
      - name: golint
        if: always()
        run: |
            sudo apt-get update && \
            DEBIAN_FRONTEND="noninteractive" sudo apt-get update && sudo apt-get install -y golint
            echo "## Golint" >> $GITHUB_STEP_SUMMARY
            golint  ./... |tee golint.log >> $GITHUB_STEP_SUMMARY
      - name: go test
        if: always()
        run: |
          echo "Go test" >> $GITHUB_STEP_SUMMARY
          go test ./... |tee gotest.log >> $GITHUB_STEP_SUMMARY
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Logs
          path: |
            golint.log
            govet.log
            gotest.log
